<?php

/**
 * @file
 * Contains announcement_pop_up.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\announcement_pop_up\Entity\Announcement;

/**
 * Implements hook_help().
 */
function announcement_pop_up_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the announcement_pop_up module.
    case 'help.page.announcement_pop_up':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('A module for managing custom announcement pop-ups across webpages.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function announcement_pop_up_theme() {
  $theme = [];
  $theme['announcement'] = [
    'render element' => 'elements',
    'file' => 'announcement.page.inc',
    'template' => 'announcement',
  ];
  $theme['announcement_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'announcement.page.inc',
  ];
  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function announcement_pop_up_theme_suggestions_announcement(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#announcement'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  /** @var \Drupal\Core\Entity\EntityInterface $entity */
  $suggestions[] = 'announcement__' . $sanitized_view_mode;
  $suggestions[] = 'announcement__' . $entity->bundle();
  $suggestions[] = 'announcement__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'announcement__' . $entity->id();
  $suggestions[] = 'announcement__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_page_attachments().
 */
function announcement_pop_up_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'announcement_pop_up/global';

  $announcements = Announcement::loadMultiple();

  $view_builder = \Drupal::entityTypeManager()->getViewBuilder('announcement');

  /* @var \Drupal\announcement_pop_up\Entity\Announcement $announcement */

  foreach ($announcements as $announcement) {

    if ($announcement->showAnnouncement()) {
      $build = $view_builder->view($announcement);
      $render = \Drupal::service('renderer')->renderPlain($build);
      $attachments['#attached']['drupalSettings']['announcements'][$announcement->id()] = $render;
      $tags = $build['#cache']['tags'];
    }
    else {
      $tags = $announcement->getCacheTags();
    }

    if (!isset($attachments['#cache']['tags'])) {
      $attachments['#cache']['tags'] = $tags;
    }
    else {
      $attachments['#cache']['tags'] = array_merge($attachments['#cache']['tags'], $tags);
    }

  }
}
