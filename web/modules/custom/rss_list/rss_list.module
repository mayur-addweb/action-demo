<?php

/**
 * @file
 * Contains rss_list.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\rss_list\Entity\RssPage;
use Drupal\Core\Form\FormState;
use Drupal\Core\Render\Element;

/**
 * Implements hook_help().
 */
function rss_list_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the rss_list module.
    case 'help.page.rss_list':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Expose articles listing into RSS feed and feed pages.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function rss_list_theme() {
  return [
    'rss_list_form' => [
      'render element' => 'form',
    ],
    'rss_page' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Prepares variables for rss_page templates.
 *
 * Default template: rss-page.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing rendered fields.
 *   - attributes: HTML attributes for the containing element.
 *
 * @throws \Drupal\Core\Entity\EntityMalformedException
 */
function template_preprocess_rss_page(array &$variables) {
  /** @var Drupal\rss_list\Entity\RssPage $rss_page */
  $rss_page = $variables['elements']['#rss_page'];
  $variables['rss_entity'] = $rss_page;
  $variables['rss_entity_url'] = $rss_page->isNew() ? '' : $rss_page->toUrl();
  $variables['rss'] = [];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['rss'][$key] = $variables['elements'][$key];
  }
  // Set the title.
  $variables['title'] = $rss_page->label();
  // Get the site host.
  $host = \Drupal::request()->getSchemeAndHttpHost();
  if ($rss_page->isFeedEnable()) {
    // Get the feed URL.
    $variables['rss_feed_url'] = $host . $rss_page->getFeedPath();
  }
  // Get the Helper.
  $helper = \Drupal::service('rss_list.helper');
  // Handle Items.
  $articles = [];
  $items = $helper->getFeedItems($rss_page);
  /** @var \Drupal\node\NodeInterface $item */
  foreach ($items as $item) {
    $article = [
      'title' => $item->label(),
      'url' => $item->toUrl()->setAbsolute(TRUE)->toString(),
    ];
    /** @var \Drupal\node\NodeInterface $article_teaser */
    $article_teaser = $helper->getArticleTeaser($item, 25);
    $excerpt = NULL;
    if ($article_teaser) {
      // Generate item summary.
      $excerpt = $article_teaser->get('field_summary')->getString();
      // Get Featured Image.
      $image_url = $helper->getArticleTeaserFeaturedImageUrl($article_teaser);
      if (!empty($image_url)) {
        $article['image_url'] = $image_url;
      }
      $article_teaser_title = $article_teaser->label();
      if (!empty($article_teaser_title)) {
        $article['title'] = $article_teaser_title;
      }
    }
    if (empty($excerpt)) {
      $excerpt = $helper->extractSummaryDescription('body', $item);
    }
    $article['excerpt'] = $excerpt;
    // Add to the list.
    $articles[] = $article;
  }
  $variables['articles'] = $articles;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function rss_list_preprocess_page(&$variables) {
  $rss_page = \Drupal::routeMatch()->getParameter('rss_page');
  if (!$rss_page) {
    return;
  }
  $variables['title'] = $rss_page->label();
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function rss_list_rss_page_update(RssPage $feed) {
  // @todo: There should be a better way to do this, please confirm.
  \Drupal::service("router.builder")->rebuild();
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 */
function rss_list_inline_entity_form_entity_form_alter(&$entity_form, &$form_state) {
  $parent_node = rss_list_is_teaser_article_ief($entity_form, $form_state);
  if (!$parent_node) {
    return;
  }
  $operation = $entity_form['#op'] ?? NULL;
  if ($operation != 'add') {
    return;
  }
  // 1. Populate Title.
  $entity_form['title']['widget']['0']['value']['#default_value'] = $parent_node->label();
  // 2. Populate Summary.
  /** @var \Drupal\rss_list\RssFeedHelper $helper */
  $helper = \Drupal::service('rss_list.helper');
  $summary = $helper->extractSummaryDescription('body', $parent_node);
  if (empty($summary)) {
    return;
  }
  $entity_form['field_summary']['widget']['0']['value']['#default_value'] = $summary;
}

/**
 * Implements hook_inline_entity_form_table_fields_alter().
 */
function rss_list_inline_entity_form_table_fields_alter(&$fields, $context) {
  $parent_bundle = $context['parent_bundle'] ?? NULL;
  if ($parent_bundle != 'publication') {
    return;
  }
  $field_name = $context['field_name'] ?? NULL;
  if ($field_name != 'field_article_teaser') {
    return;
  }
  unset($fields['status']);
}

/**
 * Check if the current form is IEF of bundle "article_teaser".
 *
 * @param array $entity_form
 *   The entity form.
 * @param \Drupal\Core\Form\FormState $form_state
 *   The form state.
 *
 * @return bool|\Drupal\node\NodeInterface
 *   The entity label.
 */
function rss_list_is_teaser_article_ief(array &$entity_form = [], FormState &$form_state = NULL) {
  $entity_type = $entity_form['#entity_type'] ?? NULL;
  if ($entity_type != 'node') {
    return FALSE;
  }
  $bundle = $entity_form['#bundle'] ?? NULL;
  if ($bundle != 'article_teaser') {
    return FALSE;
  }
  /** @var \Drupal\Core\Form\FormState $form_state */
  $build_info = $form_state->getBuildInfo();
  /** @var \Drupal\node\NodeForm $callback_object */
  $callback_object = $build_info['callback_object'] ?? NULL;
  if (!$callback_object) {
    return FALSE;
  }
  $parent_node = $callback_object->getEntity();
  if (!$parent_node) {
    return FALSE;
  }
  /** @var \Drupal\node\NodeInterface $parent_node */
  return $parent_node;
}
