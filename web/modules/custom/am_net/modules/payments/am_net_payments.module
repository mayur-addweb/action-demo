<?php

/**
 * @file
 * AM.net Payments module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\entity\BundleFieldDefinition;
use Drupal\user\UserInterface;

/**
 * Implements hook_user_login().
 */
function am_net_payments_user_login(UserInterface $user) {
  // Update payments/payment methods for the AM.net Payflow payment gateway.
  \Drupal::service('am_net_payments.payments_updater')->update($user, 'amnet_payflow');
}

/**
 * Implements hook_entity_base_field_info().
 */
function am_net_payments_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'commerce_payment_method') {
    // AM.net stores the card number in a special long masked format.
    // e.g. '4***-****-****-1111' instead of just '1111' as Commerce does.
    $fields['amnet_number'] = BundleFieldDefinition::create('string')
      ->setLabel(t('AM.net card number'))
      ->setDescription(t('The masked payment method (credit card) number in the format expected by AM.net.'));
    // Add Status(Active/Inactive) Field on the entity 'Payment Methods'
    // to avoid remove Payment Methods.
    $fields['status'] = BundleFieldDefinition::create('boolean')
      ->setLabel(t('Active?'))
      ->setDescription(t('Payment method Status(Active/Inactive)'))
      ->setRequired(TRUE)
      ->setDefaultValue(TRUE)
      ->setDisplayOptions('form', [
        'type' => 'boolean_checkbox',
        'settings' => [
          'display_label' => TRUE,
        ],
        'weight' => 120,
      ])
      ->setDisplayConfigurable('form', TRUE);
    return $fields;
  }

}

/**
 * Implements hook_entity_type_alter().
 */
function am_net_payments_entity_type_alter(array &$entity_types) {
  if (isset($entity_types['commerce_payment_method'])) {
    /* @var \Drupal\Core\Entity\EntityTypeInterface $entity_definition */
    $entity_definition = $entity_types['commerce_payment_method'];
    $entity_definition->setFormClass('delete', 'Drupal\am_net_payments\Form\PaymentMethodDeleteForm');
    $entity_definition->setListBuilderClass('Drupal\am_net_payments\PaymentMethodListBuilder');
    $entity_definition->setStorageClass('Drupal\am_net_payments\PaymentMethodStorage');
  }
}
